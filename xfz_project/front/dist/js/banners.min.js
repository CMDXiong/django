function Banners(){}Banners.prototype.loadData=function(){var r=this;xfzajax.get({url:"/cms/banner_list/",success:function(n){if(200===n.code)for(var e=n.data,a=0;a<e.length;a++){var t=e[a];r.createBannerItem(t)}}})},Banners.prototype.createBannerItem=function(n){var e=this,a=template("banner-item",{banner:n}),t=$(".banner-list-group"),r=null;r=n?(t.append(a),t.find(".banner-item:last")):(t.prepend(a),t.find(".banner-item:first")),e.addImageSelectEvent(r),e.addRemoveBannerEvent(r),e.addSaveBannerEvent(r)},Banners.prototype.listenAddBannerEvent=function(){var n=this;$("#add-banner-btn").click(function(){n.createBannerItem()})},Banners.prototype.addImageSelectEvent=function(n){var a=n.find(".thumbnail"),e=n.find(".image-input");a.click(function(){e.click()}),e.change(function(){var n=this.files[0],e=new FormData;e.append("file",n),xfzajax.post({url:"/cms/upload_file/",data:e,processData:!1,contentType:!1,success:function(n){if(200===n.code){var e=n.data.url;a.attr("src",e)}}})})},Banners.prototype.addRemoveBannerEvent=function(e){var n=e.find(".close-btn"),a=e.attr("data-banner-id");n.click(function(){a?xfzalert.alertConfirm({text:"您确定要删除这个轮播图吗？",confirmCallback:function(){xfzajax.post({url:"/cms/delete_banner/",data:{banner_id:a},success:function(n){200===n.code&&(e.remove(),window.messageBox.showSuccess("轮播图删除成功"))}})}}):e.remove()})},Banners.prototype.addSaveBannerEvent=function(n){var e=n.find(".save-btn"),t=n.find(".thumbnail"),r=n.find("input[name='priority']"),i=n.find("input[name='link_to']"),o=n.find('span[class="priority"]');e.click(function(){var n=t.attr("src"),e=r.val(),a=i.val();xfzajax.post({url:"/cms/add_banner/",data:{image_url:n,priority:e,link_to:a},success:function(n){if(200===n.code){var e=n.data.banner_id;o.text("优先级："+e),window.messageBox.showSuccess("轮播图添加完成")}}})})},Banners.prototype.run=function(){this.listenAddBannerEvent(),this.loadData()},$(function(){(new Banners).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
