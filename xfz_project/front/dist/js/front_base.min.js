function FrontBase(){}function Auth(){this.maskWrapper=$(".mask-wrapper"),this.scrollWrapper=$(".scroll-wrapper")}FrontBase.prototype.run=function(){this.listenAuthBoxHover()},FrontBase.prototype.listenAuthBoxHover=function(){var t=$(".auth-box"),n=$(".user-more-box");t.hover(function(){n.show()},function(){n.hide()})},Auth.prototype.run=function(){var t=this;t.listenShowHideEvent(),t.listenSwitchEvent(),t.listenSigninEvent(),t.listenImgCaptchaEvent()},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.listenShowHideEvent=function(){var t=this,n=$(".signin-btn"),e=$(".signup-btn"),o=$(".close-btn");n.click(function(){t.showEvent(),t.scrollWrapper.css({left:0})}),e.click(function(){t.showEvent(),t.scrollWrapper.css({left:-400})}),o.click(function(){t.hideEvent()})},Auth.prototype.listenSwitchEvent=function(){var n=this;$(".switch").click(function(){var t=n.scrollWrapper.css("left");(t=parseInt(t))<0?n.scrollWrapper.animate({left:"0"}):n.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.listenImgCaptchaEvent=function(){var t=$(".img-captcha");t.click(function(){t.attr("src","/account/img_captcha/?random="+Math.random())})},Auth.prototype.listenSigninEvent=function(){var i=this,t=$(".signin-group"),o=t.find("input[name='telephone']"),r=t.find("input[name='password']"),s=t.find("input[name='remember']");t.find(".submit-btn").click(function(){var t=o.val(),n=r.val(),e=s.prop("checked");xfzajax.post({url:"/account/login/",data:{telephone:t,password:n,remember:e?1:0},success:function(t){if(200===t.code)i.hideEvent(),window.location.reload();else{var n=t.message;if("string"==typeof n||n.constructor===String)window.messageBox.show(n);else for(var e in n){var o=n[e][0];window.messageBox.show(o)}}},fail:function(t){console.log(t)}})})},$(function(){(new Auth).run()}),$(function(){(new FrontBase).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
