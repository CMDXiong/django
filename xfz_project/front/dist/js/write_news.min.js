function News(){}News.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{initialFrameHeight:400,serverUrl:"/ueditor/upload/"})},News.prototype.run=function(){var e=this;e.listenQiniuUploadFileEvent(),e.initUEditor(),e.listenSubmitEvent()},News.prototype.listenUploadFileEvent=function(){var n=$("#thumbnail-btn");n.change(function(){var e=n[0].files[0],t=new FormData;t.append("file",e),xfzajax.post({url:"/cms/upload_file/",data:t,processData:!1,contentType:!1,success:function(e){if(200===e.code){var t=e.data.url;console.log(t),$("#thumbnail-form").val(t)}}})})},News.prototype.listenQiniuUploadFileEvent=function(){var r=this;$("#thumbnail-btn").change(function(){var a=this.files[0];xfzajax.get({url:"/cms/qntoken/",success:function(e){if(200===e.code){var t=e.data.token,n=(new Date).getTime()+"."+a.name.split(".")[1],o={fname:n,params:{},mimeType:["image/png","image/jpeg","image/fig"]},i={useCdnDomain:!0,retryCount:6,region:qiniu.region.z0};qiniu.upload(a,n,t,o,i).subscribe({next:r.handleFileUploadProgress,error:r.handleFileUploadError,complete:r.handleFileUploadComplete})}}})})},News.prototype.handleFileUploadProgress=function(e){var t=News.progressGroup,n=$(".progress-bar");n.css({width:"0"}),n.text("0%");var o=e.total.percent.toFixed(0)+"%";t.show(),n.css({width:o}),n.text(o)},News.prototype.handleFileUploadError=function(e){console.log(e.message),$("#progress-group").hide()},News.prototype.handleFileUploadComplete=function(e){$("#progress-group").hide();var t="http://q7jhogfwy.bkt.clouddn.com/"+e.key;$("input[name='thumbnail']").val(t)},News.prototype.listenSubmitEvent=function(){$("#submit-btn").click(function(e){e.preventDefault();var t=$(this).attr("data-news-id"),n=$("input[name='title']").val(),o=$("select[name='category']").val(),i=$("input[name='desc']").val(),a=$("input[name='thumbnail']").val(),r=window.ue.getContent(),s="";s=t?"/cms/edit_news/":"/cms/write_news/",xfzajax.post({url:s,data:{title:n,category:o,desc:i,thumbnail:a,content:r,pk:t},success:function(e){200===e.code&&xfzalert.alertSuccess("恭喜！新闻发表成功",function(){window.location.reload()})}})})},$(function(){(new News).run(),News.progressGroup=$("#progress-group")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
